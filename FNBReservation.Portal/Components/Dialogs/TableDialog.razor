@using FNBReservation.Portal.Models
@using Microsoft.JSInterop
@inject IJSRuntime JS
@rendermode InteractiveServer

<MudDialog Style="min-width: 550px; max-width: 700px;">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(EditMode ? Icons.Material.Filled.Edit : Icons.Material.Filled.Add)" Class="mr-2" />
            @(EditMode ? "Edit Table" : "Add Table")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudTextField @bind-Value="Table.TableNumber" Label="Table Number" Required
                              Variant="Variant.Outlined" FullWidth="true" />
            </MudItem>
            <MudItem xs="6">
                <MudNumericField @bind-Value="Table.Capacity" Label="Capacity" Required
                                 Variant="Variant.Outlined" Min="1" Max="20" FullWidth="true" />
            </MudItem>
            <MudItem xs="6">
                <MudTextField @bind-Value="Table.Section" Label="Section" Required
                              Variant="Variant.Outlined" FullWidth="true" />
            </MudItem>
            <MudItem xs="12">
                <div class="d-flex align-center">
                    <input type="checkbox" id="tableIsActive" checked="@Table.IsActive" @onchange="@((e) => Table.IsActive = (bool)e.Value)" />
                    <label for="tableIsActive" class="ml-2">Active</label>
                </div>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public TableInfo Table { get; set; } = new();
    [Parameter] public bool EditMode { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await JS.InvokeVoidAsync("console.log", "TableDialog initialized:", Table, $"EditMode: {EditMode}");
        
        // Ensure Id is set for new tables if not already set
        if (!EditMode && Table.Id == Guid.Empty)
        {
            Table.Id = Guid.NewGuid();
            await JS.InvokeVoidAsync("console.log", "Generated new ID for table:", Table.Id);
        }
    }

    private void Submit()
    {
        if (string.IsNullOrWhiteSpace(Table.TableNumber))
        {
            return;
        }
        
        MudDialog.Close(DialogResult.Ok(Table));
    }
    
    private void Cancel() => MudDialog.Cancel();
}