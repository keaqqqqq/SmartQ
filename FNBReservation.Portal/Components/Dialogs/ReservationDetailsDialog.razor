@using FNBReservation.Portal.Models
@using FNBReservation.Portal.Services
@inject IReservationService ReservationService
@inject ISnackbar Snackbar
@rendermode InteractiveServer

<MudDialog DisableSidePadding="true" Class="reservation-details-dialog">
    <TitleContent>
        <MudText Typo="Typo.h6" Class="px-4 py-2">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2" /> Reservation Details
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (isLoading)
        {
            <div class="d-flex justify-center align-center" style="height: 200px;">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        else if (reservation == null)
        {
            <MudAlert Severity="Severity.Error" Class="my-4">Failed to load reservation details.</MudAlert>
        }
        else
        {
            <div class="pa-4">
                <div class="d-flex flex-column flex-md-row gap-4">
                    <MudPaper Elevation="0" Class="flex-grow-1">
                        <MudText Typo="Typo.subtitle1" Class="mb-2">Reservation Information</MudText>

                        <MudList Clickable="false" Dense="true" Padding="false" T="string">
                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Reservation ID</MudText>
                                    <MudText>@reservation.ReservationId</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Outlet</MudText>
                                    <MudText>@reservation.OutletName</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Date & Time</MudText>
                                    <MudText>@reservation.ReservationDate.ToString("dddd, MMMM d, yyyy")</MudText>
                                    <MudText>@reservation.ReservationDate.ToString("h:mm tt") - @reservation.EndTime.ToString("h:mm tt")</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Status</MudText>
                                    <MudChip Color="@GetStatusColor(reservation.Status)" Size="Size.Small" T="string">
                                        @reservation.Status
                                    </MudChip>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Tables</MudText>
                                    <MudText>@(string.Join(", ", reservation.TableAssignments))</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Source</MudText>
                                    <MudText>@reservation.Source</MudText>
                                </div>
                            </MudListItem>
                        </MudList>
                    </MudPaper>

                    <MudPaper Elevation="0" Class="flex-grow-1">
                        <MudText Typo="Typo.subtitle1" Class="mb-2">Customer Information</MudText>

                        <MudList Clickable="false" Dense="true" Padding="false" T="string">
                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Name</MudText>
                                    <MudText>@reservation.CustomerName</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Phone</MudText>
                                    <MudText>@reservation.CustomerPhone</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Email</MudText>
                                    <MudText>@(reservation.CustomerEmail ?? "Not provided")</MudText>
                                </div>
                            </MudListItem>

                            <MudListItem T="string">
                                <div class="d-flex flex-column">
                                    <MudText Color="Color.Primary" Typo="Typo.subtitle2">Party Size</MudText>
                                    <MudText>@reservation.PartySize</MudText>
                                </div>
                            </MudListItem>
                        </MudList>
                    </MudPaper>
                </div>

                @if (!string.IsNullOrEmpty(reservation.SpecialRequests))
                {
                    <MudPaper Elevation="0" Class="mt-4 pt-2">
                        <MudText Typo="Typo.subtitle1">Special Requests</MudText>
                        <MudText>@reservation.SpecialRequests</MudText>
                    </MudPaper>
                }

                @if (!string.IsNullOrEmpty(reservation.Notes))
                {
                    <MudPaper Elevation="0" Class="mt-4 pt-2">
                        <MudText Typo="Typo.subtitle1">Notes</MudText>
                        <MudText>@reservation.Notes</MudText>
                    </MudPaper>
                }

                <MudPaper Elevation="0" Class="mt-4 pt-2">
                    <MudText Typo="Typo.subtitle1">Additional Information</MudText>
                    <MudGrid>
                        <MudItem xs="12" sm="6">
                            <MudText Typo="Typo.subtitle2" Color="Color.Primary">Created</MudText>
                            <MudText>@reservation.CreatedAt.ToString("d MMM yyyy h:mm tt")</MudText>
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudText Typo="Typo.subtitle2" Color="Color.Primary">Last Updated</MudText>
                            <MudText>@reservation.UpdatedAt.ToString("d MMM yyyy h:mm tt")</MudText>
                        </MudItem>

                        @if (reservation.CheckInTime.HasValue)
                        {
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.subtitle2" Color="Color.Primary">Check-In Time</MudText>
                                <MudText>@reservation.CheckInTime.Value.ToString("d MMM yyyy h:mm tt")</MudText>
                            </MudItem>
                        }

                        @if (reservation.CheckOutTime.HasValue)
                        {
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.subtitle2" Color="Color.Primary">Check-Out Time</MudText>
                                <MudText>@reservation.CheckOutTime.Value.ToString("d MMM yyyy h:mm tt")</MudText>
                            </MudItem>
                        }
                    </MudGrid>
                </MudPaper>
            </div>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

<style>
    /* Make the dialog responsive */
    .reservation-details-dialog {
        width: 90vw;
        max-width: 1000px;
        max-height: 90vh;
        overflow: hidden;
    }

    /* Handle small screens */
    @@media (max-width: 768px) {
        .reservation-details-dialog {
            width: 100vw;
            max-width: 100%;
            height: 100vh;
            max-height: 100vh;
            border-radius: 0;
            margin: 0;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }

        ::deep .mud-dialog-content {
            max-height: calc(100vh - 120px);
        }
    }

    /* Ensure the dialog content is scrollable */
    ::deep .mud-dialog-content {
        overflow-y: auto;
    }
</style>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public string ReservationId { get; set; } = string.Empty;

    private ReservationDto? reservation;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadReservationData();
    }

    private async Task LoadReservationData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            reservation = await ReservationService.GetReservationByIdAsync(ReservationId);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading reservation details: {ex.Message}", Severity.Error);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private Color GetStatusColor(string status)
    {
        return status.ToLower() switch
        {
            "confirmed" => Color.Info,
            "completed" => Color.Dark,
            "cancelled" => Color.Error,
            "no-show" => Color.Warning,
            _ => Color.Default
        };
    }

    private void Close() => MudDialog.Close();
}