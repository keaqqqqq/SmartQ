@page "/login"
@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@layout LoginLayout

<PageTitle>Login - F&B Reservation System</PageTitle>

<link href="css/login.css" rel="stylesheet" />
@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudGrid Class="login-container" Justify="Justify.Center" AlignItems="AlignItems.Center">
    <MudItem xs="12" sm="10" md="8" lg="6">
        <MudPaper Class="login-card" Elevation="3">
            <MudGrid>
                <!-- Left side - Image -->
                <MudItem xs="12" md="6" Class="login-image-container px-0">
                    <div class="login-image">
                        <!-- The image is set as background in CSS -->
                    </div>
                </MudItem>
                
                <!-- Right side - Login Form -->
                <MudItem xs="12" md="6" Class="pa-8">
                    <div class="d-flex flex-column h-100">
                        <div class="mb-6">
                            <MudText Typo="Typo.h4" Class="mb-1 primary-text">Hello!</MudText>
                            <MudDivider Class="primary-divider mb-4" Style="width: 60px; height: 2px;" />
                            <MudText Typo="Typo.subtitle2" Color="Color.Dark">Sign in to continue</MudText>
                        </div>
                        
                        <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" FormName="loginForm" Class="flex-grow-1 d-flex flex-column">
                            <DataAnnotationsValidator />
                            
                            <MudTextField 
                                @bind-Value="loginModel.Username" 
                                Label="Username or Staff ID" 
                                Variant="Variant.Outlined"
                                Adornment="Adornment.Start" 
                                AdornmentIcon="@Icons.Material.Filled.Person" 
                                AdornmentColor="Color.Primary"
                                Class="mb-4" />
                                
                            <MudTextField 
                                @bind-Value="loginModel.Password" 
                                Label="Password" 
                                Variant="Variant.Outlined" 
                                InputType="@_passwordInputType" 
                                Adornment="Adornment.Start" 
                                AdornmentIcon="@Icons.Material.Filled.Lock"
                                AdornmentColor="Color.Primary" 
                                Class="mb-3" />
                                
                            <MudCheckBox T="bool"
                                @bind-Checked="loginModel.RememberMe" 
                                Label="Remember me" 
                                Color="Color.Primary"
                                Class="mb-4" />
                                
                            <MudButton 
                                Variant="Variant.Filled" 
                                Color="Color.Primary" 
                                Size="Size.Large" 
                                FullWidth="true"
                                ButtonType="ButtonType.Submit"
                                Class="mt-auto py-3">
                                LOGIN
                                <MudIcon Icon="@Icons.Material.Filled.ArrowForward" Class="ml-2" />
                            </MudButton>
                        </EditForm>
                    </div>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private LoginModel loginModel = new LoginModel();
    private InputType _passwordInputType = InputType.Password;
    
    private class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }
        
        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
        
        public bool RememberMe { get; set; }
    }
    
    private void HandleLogin()
    {
        // TODO: Implement actual authentication logic
        Snackbar.Add("Login successful", Severity.Success);
        NavigationManager.NavigateTo("/dashboard");
    }
}